{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Documents\\\\GitHub\\\\goit-react-hw-01-components\\\\src\\\\components\\\\Statistics\\\\Statistics.jsx\";\nimport styles from \"./Statistics.css\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = _ref => {\n  let {\n    title,\n    items\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.statistics,\n    children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.list,\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Stat, {\n        stat: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n_c = Statistics;\nconst Stat = _ref2 => {\n  let {\n    stat\n  } = _ref2;\n  const {\n    label,\n    percentage\n  } = stat;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.item,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.label,\n      children: [label, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.percentage,\n      children: [percentage, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this);\n};\n_c2 = Stat;\nStat.propTypes = {\n  title: PropTypes.string,\n  stat: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  }).isRequired\n};\nexport default Statistics;\nvar _c, _c2;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"Stat\");","map":{"version":3,"names":["styles","PropTypes","jsxDEV","_jsxDEV","Statistics","_ref","title","items","className","statistics","children","fileName","_jsxFileName","lineNumber","columnNumber","list","map","item","Stat","stat","id","_c","_ref2","label","percentage","_c2","propTypes","string","shape","isRequired","number","$RefreshReg$"],"sources":["C:/Users/Андрей/Documents/GitHub/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx"],"sourcesContent":["import styles from \"./Statistics.css\"\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Statistics = ({title, items}) => {\r\n    return <section className={styles.statistics}>\r\n                {title && <h2 className={styles.title}>{title}</h2>}        \r\n        \r\n                <ul className={styles.list}>\r\n                    {items.map(item => <Stat stat={item} key={ item.id } />)}\r\n                </ul>\r\n            </section>\r\n}\r\n\r\nconst Stat = ({ stat }) => {\r\n    const {label, percentage} = stat\r\n    return  <li className={styles.item}>\r\n                <span className={styles.label}>{label} </span>\r\n                <span className={styles.percentage}>{percentage}%</span>\r\n            </li>\r\n}\r\n\r\nStat.propTypes = {\r\n    title: PropTypes.string,\r\n    stat: PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n        }).isRequired,\r\n}\r\n\r\nexport default Statistics"],"mappings":";AAAA,OAAOA,MAAM,MAAM,kBAAkB;AACrC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnC,MAAMC,UAAU,GAAGC,IAAA,IAAoB;EAAA,IAAnB;IAACC,KAAK;IAAEC;EAAK,CAAC,GAAAF,IAAA;EAC9B,oBAAOF,OAAA;IAASK,SAAS,EAAER,MAAM,CAACS,UAAW;IAAAC,QAAA,GAChCJ,KAAK,iBAAIH,OAAA;MAAIK,SAAS,EAAER,MAAM,CAACM,KAAM;MAAAI,QAAA,EAAEJ;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEnDX,OAAA;MAAIK,SAAS,EAAER,MAAM,CAACe,IAAK;MAAAL,QAAA,EACtBH,KAAK,CAACS,GAAG,CAACC,IAAI,iBAAId,OAAA,CAACe,IAAI;QAACC,IAAI,EAAEF;MAAK,GAAOA,IAAI,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AACtB,CAAC;AAAAO,EAAA,GARKjB,UAAU;AAUhB,MAAMc,IAAI,GAAGI,KAAA,IAAc;EAAA,IAAb;IAAEH;EAAK,CAAC,GAAAG,KAAA;EAClB,MAAM;IAACC,KAAK;IAAEC;EAAU,CAAC,GAAGL,IAAI;EAChC,oBAAQhB,OAAA;IAAIK,SAAS,EAAER,MAAM,CAACiB,IAAK;IAAAP,QAAA,gBACvBP,OAAA;MAAMK,SAAS,EAAER,MAAM,CAACuB,KAAM;MAAAb,QAAA,GAAEa,KAAK,EAAC,GAAC;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9CX,OAAA;MAAMK,SAAS,EAAER,MAAM,CAACwB,UAAW;MAAAd,QAAA,GAAEc,UAAU,EAAC,GAAC;IAAA;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AACjB,CAAC;AAAAW,GAAA,GANKP,IAAI;AAQVA,IAAI,CAACQ,SAAS,GAAG;EACbpB,KAAK,EAAEL,SAAS,CAAC0B,MAAM;EACvBR,IAAI,EAAElB,SAAS,CAAC2B,KAAK,CAAC;IACdR,EAAE,EAAEnB,SAAS,CAAC0B,MAAM,CAACE,UAAU;IAC/BN,KAAK,EAAEtB,SAAS,CAAC0B,MAAM,CAACE,UAAU;IAClCL,UAAU,EAAEvB,SAAS,CAAC6B,MAAM,CAACD;EACjC,CAAC,CAAC,CAACA;AACX,CAAC;AAED,eAAezB,UAAU;AAAA,IAAAiB,EAAA,EAAAI,GAAA;AAAAM,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAN,GAAA"},"metadata":{},"sourceType":"module"}