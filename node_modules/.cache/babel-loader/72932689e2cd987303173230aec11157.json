{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Documents\\\\GitHub\\\\goit-react-hw-01-components\\\\src\\\\components\\\\Statistics\\\\Statistics.jsx\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Statistics = _ref => {\n  let {\n    title,\n    items\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    class: \"Statistics\",\n    children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"list\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Stats, {\n        stat: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 28\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 12\n  }, this);\n};\n_c = Statistics;\nconst Stats = _ref2 => {\n  let {\n    stats\n  } = _ref2;\n  const {\n    label,\n    percentage\n  } = stats;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    class: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"percentage\",\n      children: [percentage, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n_c2 = Stats;\nStats.propTypes = {\n  title: PropTypes.string,\n  stat: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  }).isRequired\n};\nexport default Statistics;\nvar _c, _c2;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"Stats\");","map":{"version":3,"names":["PropTypes","jsxDEV","_jsxDEV","Statistics","_ref","title","items","class","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","item","Stats","stat","id","_c","_ref2","stats","label","percentage","_c2","propTypes","string","shape","isRequired","number","$RefreshReg$"],"sources":["C:/Users/Андрей/Documents/GitHub/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nexport const Statistics = ({ title, items }) => {\r\n    return <section class='Statistics'>\r\n         {title && <h2 className={title}>{title}</h2>}    \r\n      \r\n        <ul class='list'> \r\n        {items.map(item => <Stats stat={item} key={ item.id } />)}\r\n                </ul>\r\n            </section>\r\n            }\r\n\r\n const Stats = ({stats}) => {\r\n  const {label, percentage} = stats\r\n  return <li class='item'>\r\n            <span class=\"label\">{label}</span>\r\n            <span class=\"percentage\">{percentage}%</span>\r\n        </li>\r\n          \r\n        }         \r\n  Stats.propTypes = {\r\n          title: PropTypes.string,\r\n          stat: PropTypes.shape({\r\n                  id: PropTypes.string.isRequired,\r\n                  label: PropTypes.string.isRequired,\r\n                  percentage: PropTypes.number.isRequired,\r\n              }).isRequired,\r\n      }\r\n \r\n      export default Statistics\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,OAAO,MAAMC,UAAU,GAAGC,IAAA,IAAsB;EAAA,IAArB;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACvC,oBAAOF,OAAA;IAASK,KAAK,EAAC,YAAY;IAAAC,QAAA,GAC5BH,KAAK,iBAAIH,OAAA;MAAIO,SAAS,EAAEJ,KAAM;MAAAG,QAAA,EAAEH;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE7CX,OAAA;MAAIK,KAAK,EAAC,MAAM;MAAAC,QAAA,EACfF,KAAK,CAACQ,GAAG,CAACC,IAAI,iBAAIb,OAAA,CAACc,KAAK;QAACC,IAAI,EAAEF;MAAK,GAAOA,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AACV,CAAC;AAAAM,EAAA,GARAhB,UAAU;AAUtB,MAAMa,KAAK,GAAGI,KAAA,IAAa;EAAA,IAAZ;IAACC;EAAK,CAAC,GAAAD,KAAA;EACrB,MAAM;IAACE,KAAK;IAAEC;EAAU,CAAC,GAAGF,KAAK;EACjC,oBAAOnB,OAAA;IAAIK,KAAK,EAAC,MAAM;IAAAC,QAAA,gBACbN,OAAA;MAAMK,KAAK,EAAC,OAAO;MAAAC,QAAA,EAAEc;IAAK;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAClCX,OAAA;MAAMK,KAAK,EAAC,YAAY;MAAAC,QAAA,GAAEe,UAAU,EAAC,GAAC;IAAA;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEL,CAAC;AAAAW,GAAA,GAPFR,KAAK;AAQVA,KAAK,CAACS,SAAS,GAAG;EACVpB,KAAK,EAAEL,SAAS,CAAC0B,MAAM;EACvBT,IAAI,EAAEjB,SAAS,CAAC2B,KAAK,CAAC;IACdT,EAAE,EAAElB,SAAS,CAAC0B,MAAM,CAACE,UAAU;IAC/BN,KAAK,EAAEtB,SAAS,CAAC0B,MAAM,CAACE,UAAU;IAClCL,UAAU,EAAEvB,SAAS,CAAC6B,MAAM,CAACD;EACjC,CAAC,CAAC,CAACA;AACX,CAAC;AAED,eAAezB,UAAU;AAAA,IAAAgB,EAAA,EAAAK,GAAA;AAAAM,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAN,GAAA"},"metadata":{},"sourceType":"module"}